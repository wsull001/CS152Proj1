Declaration_blk:	Declaration SEMICOLON Declaration_blk {}
			| {}
			;

Declaration:	IDENTIFIER Identifier_blk COLON Array_declaration INTEGER {}
		;

Identifier_blk: COMMA IDENTIFIER Identifier_blk {}
		| {}
		;

Array_declaration:	ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF {}
			| {}
			;

Statement_blk:	Statement SEMICOLON Statement_blk {}
		| {}
		;

Statement:	Var SEMICOLON EQ Expression {}
		| IF Bool_exp BEGINLOOP Statement SEMICOLON Statement_blk ELSE {}
		| WHILE Bool_exp BEGINLOOP Statement SEMICOLON Statement_blk ENDLOOP {}
		| DO BEGINLOOP Statement SEMICOLON Statement_blk ENDLOOP WHILE Bool_exp {}
		| READ Var Var_blk {}
		| WRITE Var Var_blk {}
		| CONTINUE {}
		| RETURN Expression {}
		;

Else_blk:	ELSE Statement SEMICOLON Statement_blk {}
		| {}
		;

Bool_exp:	Relation_and_exp Or {}
		;

Or:		OR Relation_and_exp Or {}
		| {}
		;

Relation_and_exp:	Relation_exp And {}
			;

And:		AND Relation_exp And {}
		| {}
		;

Relation_exp:	Not Expression Comp Expression {}
		| Not TRUE {}
		| Not FALSE {}
		| Not L_PAREN Bool_exp R_PAREN {}
		;

Not:		NOT {}
		| {}
		;

Comp:		EQ {}
		| LT {}
		| GT {}
		| NEQ {}
		| LTE {}
		| GTE {}
		;

Expression:	Multiplicative_exp Multiplicative_exp_blk {}
		;

Multiplicative_exp_blk:	Multiplicative_exp_add Multiplicative_exp_blk {}
			| Multiplicative_exp_sub Multiplicative_exp_blk {}
			| {}
			;

Multiplicative_exp_add:	ADD Multiplicative_exp {}
			;

Multiplicative_exp_sub:	SUB Multiplicative_exp {}
			;

Multiplicative_exp:	Term Term_blk {}
			| Term {}
			;

Term_blk:	MULT Term Term_blk {}
		| DIV Term Term_blk {}
		| MOD Term Term_blk {}
		| {}
		;

Var:		IDENTIFIER {}
		| IDENTIFIER L_SQUARE_BRACKET Expression R_SQUARE_BRACKET {}
		;

Var_blk:	COMMA Var Var_blk {}
		| {}
		;

Term:		SUB Var {}
		| Var {}
		| SUB NUMBER {}
		| NUMBER {}
		| SUB L_PAREN Expression R_PAREN {}
		| SUB L_PAREN Expression R_PAREN {}
		| IDENTIFIER  L_PAREN Expression Expression_blk R_PAREN {}
		| IDENTIFIER L_PAREN R_PAREN {}
		;

Expression_blk: COMMA Expression Expression_blk {}
		| {}
		;
END